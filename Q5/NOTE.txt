Edubart's OTClient has a bug with effects that have patterns. Effects that have patterns are effected by the players position
which causes the effect to not show properly. I had to copy the fix applied on the OTCv8 effect.cpp, and apply it to Edubart's OTClient effect.cpp

The fix:
void Effect::drawEffect(const Point& dest, float scaleFactor, bool animate, int offsetX, int offsetY, LightView *lightView)
{
    if(m_id == 0)
        return;

    int animationPhase = 0;
    if(animate) {
        if(g_game.getFeature(Otc::GameEnhancedAnimations)) {
            // This requires a separate getPhaseAt method as using getPhase would make all magic effects use the same phase regardless of their appearance time
            animationPhase = rawGetThingType()->getAnimator()->getPhaseAt(m_animationTimer.ticksElapsed());
        } else {
            // hack to fix some animation phases duration, currently there is no better solution
            int ticks = EFFECT_TICKS_PER_FRAME;
            if (m_id == 33) {
                ticks <<= 2;
            }

            animationPhase = std::min<int>((int)(m_animationTimer.ticksElapsed() / ticks), getAnimationPhases() - 1);
        }
    }
    const int OffsetX = m_position.x - g_map.getCentralPosition().x;
    const int OffsetY = m_position.y - g_map.getCentralPosition().y;

    //int xPattern = OffsetX % getNumPatternX();
    //if(xPattern < 0)
    //    xPattern += getNumPatternX();

    //int yPattern = OffsetY % getNumPatternY();
    //if(yPattern < 0)
    //    yPattern += getNumPatternY();

    int xPattern = unsigned(OffsetX) % getNumPatternX();
    xPattern = 1 - xPattern - getNumPatternX();
    if (xPattern < 0) xPattern += getNumPatternX();

    int yPattern = unsigned(OffsetY) % getNumPatternY();

    rawGetThingType()->draw(dest, scaleFactor, 0, xPattern, yPattern, 0, animationPhase, lightView);
}